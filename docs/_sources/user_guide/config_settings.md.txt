# Config Settings

本框架通过三种方式确定实验的最终配置：用户命令行传参、用户自定义 config 文件、各模块默认参数配置。用户可以通过前两种方式灵活地调整实验的参数配置。

#### 命令行传参

当用户运行项目根目录下的脚本文件时，可以通过命令行指定修改一些参数，如：

```shell
python run_model.py --task traj_loc_pred --model DeepMove --dataset foursquare_tky --gpu false --batch_size 15
```

具体所允许传入的参数因不同脚本而异，可以参见 [Usage](./usage.md) 中详细介绍了所有项目根目录下可执行的脚本文件；或使用 `-h` 以获取帮助信息，如下：

```sh
> python run_model.py -h
usage: run_model.py [-h] [--task TASK] [--model MODEL] [--dataset DATASET]
                    [--config_file CONFIG_FILE] [--saved_model SAVED_MODEL]
                    [--train TRAIN] [--gpu GPU] [--batch_size BATCH_SIZE]
                    [--train_rate TRAIN_RATE] [--eval_rate EVAL_RATE]
                    [--learning_rate LEARNING_RATE] [--max_epoch MAX_EPOCH]

optional arguments:
  -h, --help            show this help message and exit
  --task TASK           the name of task
  --model MODEL         the name of model
  --dataset DATASET     the name of dataset
  --config_file CONFIG_FILE
                        the file name of config file
  --saved_model SAVED_MODEL
                        whether save the trained model
  --train TRAIN         whether re-train model if the model is trained before
  --gpu GPU
  --batch_size BATCH_SIZE
  --train_rate TRAIN_RATE
  --eval_rate EVAL_RATE
  --learning_rate LEARNING_RATE
  --max_epoch MAX_EPOCH
```

#### 自定义 config 文件

命令行允许传递的参数多为实验中常见通过的参数，如 `batch_size`。但为了使得用户能够随意修改各模块的默认参数，框架还提供通过命令行指定 config 文件名的方式，从用户自定义的配置文件中读入参数配置。用户自定义的 config 文件应满足如下格式要求：

1. 用户自定义 config 文件应为 JSON 文件。
2. JSON 文件中存放一个字典，其键为参数名，值为所要修改的参数的值。

示例：

```json
{
	"hidden_state_size": 50,
	"loc_embedding_size": 500
}
```

用户可以通过自定义 config 文件修改任意模块的默认参数，具体的参数名可以前往各模块的章节了解更多信息。